pract2:  Create an “Academic performance” dataset of students and perform the following operations using Python.

import pandas as pd
import numpy as np


df=pd.read_csv("/content/StudentsPerformanceTest1.csv")
df.isnull()

series = pd.isnull(df["math score"])
df[series]

df.notnull()

series1 = pd.notnull(df["math score"])
df[series1]

from sklearn.preprocessing import LabelEncoder 
le = LabelEncoder()
df['gender'] = le.fit_transform(df['gender'])
newdf=df
df

missing_values = ["Na", "na"]

df = pd.read_csv("StudentsPerformanceTest1.csv", na_values = missing_values)
df

ndf=df ndf.fillna(0)

data['math score'] = data['math score'].fillna(data['math score'].mean())
data[''math score''] = data[''math score''].fillna(data[''math score''].median())
data['math score''] = data[''math score''].fillna(data[''math score''].std())

data[''math score''] = data[''math score''].fillna(data[''math score''].min())
data[''math score''] = data[''math score''].fillna(data[''math score''].max())


m_v=df['math score'].mean()
df['math score'].fillna(value=m_v, inplace=True) 
df
ndf.replace(to_replace = np.nan, value = -99)


ndf.dropna()
ndf.dropna(how = 'all')
ndf.dropna(axis = 1)
new_data = ndf.dropna(axis = 0, how ='any')
new_data




col = ['math score', 'reading score' , 'writing score','placement score']
df.boxplot(col)
print(np.where(df['math score']>90))

print(np.where(df['reading score']<25)) 
print(np.where(df['writing score']<30))




fig, ax = plt.subplots(figsize = (18,10)) ax.scatter(df['placement score'], df['placement offer
count'])
plt.show()

ax.set_xlabel('(Proportion non-retail business acres)/(town)')
ax.set_ylabel('(Full-value property-tax rate)/(
$10,000)')

print(np.where((df['placement score']<50) & (df['placement offer count']>1)))
print(np.where((df['placement score']>85) & (df['placement offer count']<3)))







threshold = 0.18
sample_outliers = np.where(z <threshold) 
sample_outliers

sorted_rscore= sorted(df['reading score'])
sorted_rscore
q1 = np.percentile(sorted_rscore, 25) 
q3 = np.percentile(sorted_rscore, 75) print(q1,q3)
print(q1, q3)

IQR = q3-q1
lwr_bound = q1-(1.5*IQR) 
upr_bound = q3+(1.5*IQR) print(lwr_bound, upr_bound

r_outliers = []
for i in sorted_rscore:
  if (i<lwr_bound or i>upr_bound): 
    r_outliers.append(i)
print(r_outliers)




new_df=df
for i in sample_outliers: 
  new_df.drop(i,inplace=True)
new_df




ninetieth_percentile = np.percentile(df_stud['math score'], 90)
b = np.where(df_stud['math score']>ninetieth_percentile, ninetieth_percentile, df_stud['math score'])
print("New array:",b)


df_stud.insert(1,"m score",b,True) 
df_stud

col = ['reading score'] 
df.boxplot(col)

median=np.median(sorted_rscore) 
median

refined_df=df
refined_df['reading score'] = np.where(refined_df['reading score'] >upr_bound, median,refined_df['reading score'])

refined_df['reading score'] = np.where(refined_df['reading score'] <lwr_bound, median,refined_df['reading score'])

col = ['reading score'] refined_df.boxplot(col)

new_df['math score'].plot(kind = 'hist')
df['log_math'] = np.log10(df['math score'])
df['log_math'].plot(kind = 'hist')
